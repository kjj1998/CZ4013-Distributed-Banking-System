package functionalities;

import objects.Currency;
import utils.MessageIDGenerator;

import java.nio.ByteBuffer;

import static utils.Constants.*;
import static utils.SocketFunctions.sendRequest;
import static utils.UtilityFunctions.concatWithCopy;
import static utils.UtilityFunctions.convertStringToByteArray;


public class ClientInterface {
    public static MessageIDGenerator gen = new MessageIDGenerator(MESSAGE_ID_LENGTH);   // create a new MessageIDGenerator

    /**
     * Function to process account creation
     *
     * @param name              String containing name of the customer
     * @param currency          Enum to represent the currency of the bank account
     * @param password          String to represent password of the bank account
     * @param initialAccBalance String to represent inital account balance
     * @return the bank account number generated by the server
     */
    public static int createAccount(String name, Currency currency, String password, String initialAccBalance) {
        int nameLength = name.length();
        int currencyLength = currency.toString().length();
        int accBalanceLength = initialAccBalance.length();
        int passwordLength = password.length();

        byte[] accCreationByteArray = ByteBuffer.allocate(BYTE_BLOCK_SIZE_FOR_INT).putInt(ACC_OPENING_CODE).array();

        byte[] nameLengthByteArray = ByteBuffer.allocate(BYTE_BLOCK_SIZE_FOR_INT).putInt(nameLength).array();
        byte[] nameByteArray = convertStringToByteArray(name);

        byte[] currencyLengthByteArray = ByteBuffer.allocate(BYTE_BLOCK_SIZE_FOR_INT).putInt(currencyLength).array();
        byte[] currencyByteArray = convertStringToByteArray(currency.toString());

        byte[] passwordLengthByteArray = ByteBuffer.allocate(BYTE_BLOCK_SIZE_FOR_INT).putInt(passwordLength).array();
        byte[] passwordByteArray = convertStringToByteArray(password);

        byte[] accBalanceLengthByteArray = ByteBuffer.allocate(BYTE_BLOCK_SIZE_FOR_INT).putInt(accBalanceLength).array();
        byte[] accBalanceArray = convertStringToByteArray(initialAccBalance);

        String messageID = gen.nextString();
        System.out.println(messageID);
        byte[] messageIDArray = convertStringToByteArray(messageID);

        byte[] marshall = concatWithCopy(messageIDArray, accCreationByteArray, nameLengthByteArray, nameByteArray, currencyLengthByteArray, currencyByteArray, passwordLengthByteArray, passwordByteArray, accBalanceLengthByteArray, accBalanceArray);
        for (byte c : marshall) {
            System.out.printf("%02X ", c);      // printing to show the marshalled data on console
        }
        System.out.println();
        byte[] reply = sendRequest(marshall);

        ByteBuffer choiceBuffer = ByteBuffer.allocate(BUFFER_SIZE);
        choiceBuffer.put(reply);
        choiceBuffer.rewind();
        return choiceBuffer.getInt();
    }

    /**
     * Function to query current account balance
     *
     * @param accNumber the account number of the account to be queried
     * @param password  the password of the account to be queried
     * @return the current balance in the account
     */
    public static double queryAccBalance(String accNumber, String password) {
        int accNumberLength = accNumber.length();
        int passswordLength = password.length();

        byte[] accBalanceQueryByteArray = ByteBuffer.allocate(BYTE_BLOCK_SIZE_FOR_INT).putInt(ACC_BALANCE_CODE).array();
        byte[] accNumberLengthByteArray = ByteBuffer.allocate(BYTE_BLOCK_SIZE_FOR_INT).putInt(accNumberLength).array();
        byte[] accNumberByteArray = convertStringToByteArray(accNumber);
        byte[] passwordLengthByteArray = ByteBuffer.allocate(BYTE_BLOCK_SIZE_FOR_INT).putInt(passswordLength).array();
        byte[] passwordByteArray = convertStringToByteArray(password);

        String messageID = gen.nextString();
        System.out.println(messageID);
        byte[] messageIDArray = convertStringToByteArray(messageID);

        byte[] marshall = concatWithCopy(messageIDArray, accBalanceQueryByteArray, accNumberLengthByteArray, accNumberByteArray, passwordLengthByteArray, passwordByteArray);
        for (byte c : marshall) {
            System.out.printf("%02X ", c);      // printing to show the marshalled data on console
        }
        System.out.println();
        byte[] reply = sendRequest(marshall);

        double currentAccBalance = ByteBuffer.wrap(reply).getDouble();
        System.out.println("current account balance: " + currentAccBalance);
        return currentAccBalance;
    }
}
